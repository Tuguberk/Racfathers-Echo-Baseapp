services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      # Next.js
      NODE_ENV: production
      DATABASE_URL: ${DATABASE_URL}
      # Shared/OnchainKit variables

      NEXT_PUBLIC_ONCHAINKIT_PROJECT_NAME: ${NEXT_PUBLIC_ONCHAINKIT_PROJECT_NAME}
      NEXT_PUBLIC_URL: ${NEXT_PUBLIC_URL}
      NEXT_PUBLIC_ICON_URL: ${NEXT_PUBLIC_ICON_URL}
      NEXT_PUBLIC_ONCHAINKIT_API_KEY: ${NEXT_PUBLIC_ONCHAINKIT_API_KEY}
      NEXT_PUBLIC_APP_ICON: ${NEXT_PUBLIC_APP_ICON}
      # Frame metadata

      FARCASTER_HEADER: ${FARCASTER_HEADER}
      FARCASTER_PAYLOAD: ${FARCASTER_PAYLOAD}
      FARCASTER_SIGNATURE: ${FARCASTER_SIGNATURE}
      # Optional Frame metadata items below
      NEXT_PUBLIC_APP_SUBTITLE: ${NEXT_PUBLIC_APP_SUBTITLE}
      NEXT_PUBLIC_APP_DESCRIPTION: ${NEXT_PUBLIC_APP_DESCRIPTION}
      NEXT_PUBLIC_APP_SPLASH_IMAGE: ${NEXT_PUBLIC_APP_SPLASH_IMAGE}
      NEXT_PUBLIC_SPLASH_BACKGROUND_COLOR: ${NEXT_PUBLIC_SPLASH_BACKGROUND_COLOR}
      NEXT_PUBLIC_APP_PRIMARY_CATEGORY: ${NEXT_PUBLIC_APP_PRIMARY_CATEGORY}
      NEXT_PUBLIC_APP_HERO_IMAGE: ${NEXT_PUBLIC_APP_HERO_IMAGE}
      NEXT_PUBLIC_APP_TAGLINE: ${NEXT_PUBLIC_APP_TAGLINE}
      NEXT_PUBLIC_APP_OG_TITLE: ${NEXT_PUBLIC_APP_OG_TITLE}
      NEXT_PUBLIC_APP_OG_DESCRIPTION: ${NEXT_PUBLIC_APP_OG_DESCRIPTION}
      NEXT_PUBLIC_APP_OG_IMAGE: ${NEXT_PUBLIC_APP_OG_IMAGE}
      PRICE_API_BASE_URL: ${PRICE_API_BASE_URL}
    # Do NOT publish host ports; Traefik will route to this container over the shared "proxy" network.
    expose:
      - "3000"   # internal app port
    restart: unless-stopped
    networks:
      - proxy
    labels:
      - traefik.enable=true
      # (optional) explicit docker network for Traefik
      - traefik.docker.network=proxy

      # Router
      - traefik.http.routers.echo-miniapp.rule=Host(`echo-miniapp.racfathers.io`)
      - traefik.http.routers.echo-miniapp.entrypoints=websecure
      - traefik.http.routers.echo-miniapp.tls=true
      - traefik.http.routers.echo-miniapp.tls.certresolver=le

      # Service (internal port your app listens on)
      - traefik.http.services.echo-miniapp.loadbalancer.server.port=3000

      # Middlewares (optional)
      - traefik.http.middlewares.echo-miniapp-compress.compress=true
      - traefik.http.routers.echo-miniapp.middlewares=echo-miniapp-compress

networks:
  proxy:
    external: true
    name: proxy